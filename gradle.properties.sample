
# Gradle will run more smoothly with these arguments
org.gradle.jvmargs=-Xmx1024m -XX:MaxPermSize=256m

# Gradle debug arguments.  This is useful for debugging purposes as "gradle jettyRun" will come up
# in debug mode.  IDE debuggers (e.g., Eclipse) can attach to the port to debug the server side processes.
# org.gradle.jvmargs=-Xmx1024m -XX:MaxPermSize=256m -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,address=8000,suspend=n

# Run gradle in daemon mode, which reduces the bootstrapping process and leverage cache. Do not use in 
# integration servers and build server. 
org.gradle.daemon=true

# Path to a tomcat or other application server.
neonServer=/my/tomcat/path/apache-tomcat-7.0.39

# Configuration for the instances of mongo/spark-sql used for testing
# Mongo host configuration. Uncomment the following and specify the mongo host to enable MongoDB tests
#mongo.host=localhost
# Spark SQL configuration. Uncomment the following and specify the appropriate hosts to enable Spark SQL tests
#hdfs.url=hdfs://localhost:8020
#sparksql.host=localhost:10000
# Elasticsearch host configuration for Elasticsearch tests
#elasticsearch.host=localhost:9200

# Uncomment the line below to build Neon with Elasticsearch 1.x support instead of 2.x support. Note
# that the same property needs to be ucommented in buildSrc/gradle.properties
#useElasticsearch1=true

# Change the port for acceptance tests
acceptanceTest.port=10102

# Remote application server deployment
host=sometomcathost
user=myusername
sshKeyFile=/path/to/sshkeyfile

# Optionally if you don't have an ssh key file you can put the password in here
# password=sshpassword

# Signing values.  Uncomment and set these to do OpenPGP signing of artifacts
# signing.keyId=
# signing.password=
# signing.secretKeyRingFile=
